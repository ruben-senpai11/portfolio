:root {
  --bborder-width: 1px;
  --bborder-padding-y: 1.4rem;
  --bborder-padding-x: 1.7rem;
  --bborder-padding-y-sm: .8rem;
  --bborder-padding-x-sm: .8rem;
  --bborder-padding-y-lg: 1.6rem;
  --bborder-padding-x-lg: 1.8rem;
}

/*** Custom Document Border   ***/

.bborder-left {
  min-width: 100%;
  width: 100%;
  border-left: var(--bborder-width) solid var(--foreground-color);
}

.bborder {
  padding-right: var(--bborder-padding-x);
}

.bborder-top {
  width: 100%;
  padding-left: var(--bborder-padding-x);
  border-top: var(--bborder-width) solid var(--foreground-color);
}

.bborder-right {
  padding-top: var(--bborder-padding-y);
  border-right: var(--bborder-width) solid var(--foreground-color);
}

.bborder-bottom {
  min-width: calc(100% + var(--bborder-padding-x));
  min-height: var(--bborder-padding-y);
  background-color: var(--background-color);
  padding-bottom: var(--bborder-padding-y);
  border-top: var(--bborder-width) solid var(--foreground-color);
  overflow: hidden;
}

/* **************   ENVIRONMENT   ********************* */

.env {
  position: fixed;
  width: 20px;
  display: flex;
  flex-direction: column-reverse;
  padding: 0;
  gap: 130px;
  font-size: 14px;
  left: calc(var(--bborder-padding-x) / 4) !important;
  bottom: calc(var(--bborder-padding-y) + 5px) !important;
}

.theme,
.language {
  margin: 0;
  padding: 0;
  display: flex;
  gap: 14px;
  text-transform: uppercase;
  transform: rotate(-90deg);
  /* border: solid; */
}

.theme span,
.language span {
  display: flex;
  align-items: center;
  gap: 5px;
  cursor: pointer;
}

.checkbox {
  display: flex;
  width: 10px;
  height: 10px;
  border: 1px solid;
  cursor: pointer;
}

.checkbox.active {
  background-color: var(--foreground-color);
}


.background-color {
  position: fixed;
  display: flex;
  flex-direction: column-reverse;
  padding: 0;
  gap: 10px;
  top: calc(var(--bborder-padding-y) + 45px) !important;
  left: calc(var(--bborder-padding-x) / 2) !important;
  transition: all cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.background-color .current-color {
  border-color: 2px solid var(--foreground-color);
}

.background-color .checkbox {
  border: none;
  width: 10.5px;
  height: 10.5px;
}


@media screen and (min-width: 1200px) {
  .bborder {
    padding-right: var(--bborder-padding-x-lg);
  }

  .bborder-top {
    padding-left: var(--bborder-padding-x-lg);
  }

  .bborder-right {
    padding-top: var(--bborder-padding-y-lg);
  }

  .bborder-bottom {
    min-width: calc(100% + var(--bborder-padding-y-lg) + 3px);
    padding-bottom: var(--bborder-padding-y-lg);
  }
}

@media screen and (max-width: 924px) {
  .bborder-top::before {
    position: fixed;
    width: 150px;
    border-top: 5px solid var(--foreground-color);
  }
}

@media screen and (max-width: 650px) {
  .bborder {
    padding-right: var(--bborder-padding-x-sm);
  }

  .bborder-top {
    padding-left: 1.3rem;
    /* padding-left: var(--bborder-padding-x-sm); */
  }

  .bborder-right {
    padding-top: var(--bborder-padding-y-sm);
  }

  .bborder-bottom {
    min-width: calc(100% + var(--bborder-padding-y-sm));
    min-height: var(--bborder-padding-y-sm);
    padding-bottom: var(--bborder-padding-y-sm);
  }

  .env {
    left: calc(var(--bborder-padding-x-sm) / 10) !important;
    left: 0px;
    bottom: calc(var(--bborder-padding-y-sm)) !important;
  }
  .background-color {
    left: calc(var(--bborder-padding-x) / 4) !important;
  }
}